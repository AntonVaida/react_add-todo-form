{"version":3,"sources":["api/users.ts","api/todos.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","TodoInfo","todo","user","users","find","use","className","classNames","href","TodoList","todos","map","App","useState","userSelect","setUserSelect","setTitile","todosFromServer","setTodos","submit","setSubmit","handleSubmit","event","preventDefault","newTodo","length","Number","old","updateTodoList","htmlFor","type","placeholder","value","onChange","target","disabled","usersFromServer","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0ec6f80.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport users from '../../api/users';\nimport { Todo } from '../../interface/Todo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const { title, completed, userId } = todo;\n  const user = users.find(use => userId === use.id);\n  let name;\n  let email;\n\n  if (user) {\n    name = user.name;\n    email = user.email;\n  }\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo', {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2\n        className=\"TodoInfo__title\"\n      >\n        {title}\n      </h2>\n\n      <a\n        href={`mailto:${email}`}\n        className=\"UserInfo\"\n      >\n        {name}\n      </a>\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/index';\nimport { Todo } from '../../interface/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [userSelect, setUserSelect] = useState('0');\n  const [title, setTitile] = useState('');\n  const [todos, setTodos] = useState(todosFromServer);\n  const [submit, setSubmit] = useState(true);\n\n  const updateTodoList = () => {\n    const newTodo = {\n      id: todos.length + 2,\n      title,\n      completed: false,\n      userId: Number(userSelect),\n    };\n\n    setTodos(old => (\n      [...old, newTodo]\n    ));\n    setTitile('');\n    setUserSelect('0');\n    setSubmit(true);\n  };\n\n  const handleSubmit = (event:React.MouseEvent) => {\n    setSubmit(false);\n    event.preventDefault();\n    if (title !== '' && userSelect !== '0') {\n      setSubmit(true);\n\n      return updateTodoList();\n    }\n\n    setSubmit(false);\n\n    return null;\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form>\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n          </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={event => setTitile(event.target.value)}\n          />\n          {\n            !title && !submit\n              ? <span className=\"error\">Please enter a title</span>\n              : null\n          }\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            User:\n          </label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            name=\"userSelect\"\n            value={userSelect}\n            onChange={event => setUserSelect(event.target.value)}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              usersFromServer.map(user => (\n                <option value={user.id}>{user.name}</option>\n              ))\n            }\n          </select>\n          {\n            userSelect === '0' && !submit\n              ? <span className=\"error\">Please choose a user</span>\n              : null\n          }\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={(event) => handleSubmit(event)}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}