{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","href","className","TodoInfo","todo","users","find","userFromList","classNames","TodoList","todos","map","App","useState","userSelect","setUserSelect","setTitile","todosFromServer","setTodos","submit","setSubmit","trimedTitle","trim","htmlFor","type","placeholder","value","onChange","event","target","disabled","usersFromServer","onClick","preventDefault","newTodo","reduce","previously","currently","Number","old","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1b2fa44.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../interface/User';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a\n      href={`mailto:${email}`}\n      className=\"UserInfo\"\n    >\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport users from '../../api/users';\nimport { Todo } from '../../interface/Todo';\nimport { UserInfo } from '../UserInfo/index';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo:React.FC<Props> = ({ todo }) => {\n  const { title, completed, userId } = todo;\n  const user = users.find(userFromList => userId === userFromList.id);\n\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo', {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2\n        className=\"TodoInfo__title\"\n      >\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo/index';\nimport { Todo } from '../../interface/Todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList:React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [userSelect, setUserSelect] = useState('0');\n  const [title, setTitile] = useState('');\n  const [todos, setTodos] = useState(todosFromServer);\n  const [submit, setSubmit] = useState(true);\n\n  const trimedTitle = title.trim();\n\n  const handleSubmit = (event:React.MouseEvent) => {\n    event.preventDefault();\n\n    if (!trimedTitle || userSelect === '0') {\n      setSubmit(false);\n\n      return null;\n    }\n\n    const largestTodoId = todos.reduce((previously, currently) => (\n      previously.id > currently.id ? previously : currently\n    ));\n\n    const newTodo = {\n      id: largestTodoId.id + 1,\n      title: trimedTitle,\n      completed: false,\n      userId: Number(userSelect),\n    };\n\n    setTodos(old => (\n      [...old, newTodo]\n    ));\n    setTitile('');\n    setUserSelect('0');\n    setSubmit(true);\n\n    return null;\n  };\n\n  const handleTitle = (event:React.ChangeEvent<HTMLInputElement>) => {\n    setTitile(event.target.value);\n  };\n\n  const handleChangeUser = (event:React.ChangeEvent<HTMLSelectElement>) => {\n    setUserSelect(event.target.value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form>\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            Title:\n          </label>\n          <input\n            id=\"title\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n          {\n            !trimedTitle && !submit && (\n              <span className=\"error\">Please enter a title</span>\n            )\n          }\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            User:\n          </label>\n          <select\n            id=\"user\"\n            data-cy=\"userSelect\"\n            name=\"userSelect\"\n            value={userSelect}\n            onChange={handleChangeUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {\n              usersFromServer.map(user => (\n                <option value={user.id}>{user.name}</option>\n              ))\n            }\n          </select>\n          {\n            userSelect === '0' && !submit && (\n              <span className=\"error\">Please choose a user</span>\n            )\n          }\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={handleSubmit}\n        >\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}